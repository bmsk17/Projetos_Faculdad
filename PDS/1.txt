      function varargout = pds(varargin)

% Last Modified by GUIDE v2.5 01-Jul-2021 15:28:45

%Inicio da inicialização do código
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @pds_OpeningFcn, ...
                   'gui_OutputFcn',  @pds_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && isstr(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
%Fim da inicialização do código 


function pds_OpeningFcn(hObject, ~, handles, varargin)

handles.output = hObject;
guidata(hObject, handles);


function varargout = pds_OutputFcn(~, ~, handles)
varargout{1} = handles.output;



function b1_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=697;f2=1209;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b2_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=697;f2=1336;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function A_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=697;f2=1663;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b3_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=697;f2=1447;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b4_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=770;f2=1209;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b5_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=770;f2=1336;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function B_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=770;f2=1633;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b6_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=770;f2=1477;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b7_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=852;f2=1209;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function b8_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=852;f2=1336;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)

function C_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=852;f2=1633;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)

function b9_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=852;f2=1477;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)

function ba_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=941;f2=1209;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)

function b0_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=941;f2=1336;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function D_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=941;f2=1633;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)



function bn_Callback(~, ~, ~)

t=0.3;
fs=8000;
f1=941;f2=1477;
NS=fs*t;
n=[0:NS-1];
omega1=(2*pi*f1)/fs;
omega2=(2*pi*f2)/fs;
y1=0.5*cos(omega1*n);
y2=0.5*cos(omega2*n);
y=y1+y2;
sound(y,fs)


function close_Callback(~, ~, ~)
close;
